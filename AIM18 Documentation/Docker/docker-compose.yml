version: '3.4'
services:
  mysql:
    container_name: ebusa-mysql
    hostname: mysql
    build: 
      context: ./Setup/mysql_docker/
    ports:
     - "3306:3306"
    restart: always
    networks:
      - spring-cloud-network
    image: freinprecht/easybiz:mysql
  service-discovery:
    container_name: ebusa-service-discovery
    hostname: service-discovery
    build: 
      context: ./builds/
      dockerfile: DockerfileServiceDiscovery
    ports:
     - "8761:8761"
    restart: always
    networks:
      - spring-cloud-network
    depends_on:
      - mysql
    image: freinprecht/easybiz:servicediscovery
  configuration-service:
    container_name: ebusa-configuration-service
    hostname: configuration-service
    build: 
      context: ./builds/
      dockerfile: DockerfileConfigurationServer
    ports:
     - "8888:8888"
    restart: always
    networks:
      - spring-cloud-network
    depends_on:
      - service-discovery
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:configurationservice
  gateway:
    container_name: ebusa-gateway
    hostname: gateway
    build: 
      context: ./builds/
      dockerfile: DockerfileGateway
    ports:
     - "10000:10000"
    restart: always
    networks:
      - spring-cloud-network
    depends_on:
      - configuration-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:gateway
  gui: 
    container_name: ebusa-gui
    hostname: gui
    build: 
      context: ./builds/
      dockerfile: DockerfileGUI
    ports:
     - "3000:3000"
    restart: always
    networks:
      - spring-cloud-network
    depends_on:
      - gateway
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:gui
  modelling-platform: 
    container_name: ebusa-modelling-platform
    hostname: modelling-platform
    build: 
      context: ./builds/
      dockerfile: DockerfileModellingPlatform
    ports:
     - "4000:4000"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:modellingplatform
  process-model-storage: 
    container_name: ebusa-process-model-storage
    hostname: process-model-storage
    build: 
      context: ./builds/
      dockerfile: DockerfilePmstorage
    ports:
     - "7360:7360"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:pmstore
  process-store: 
    container_name: ebusa-process-store
    hostname: process-store
    build: 
      context: ./builds/
      dockerfile: DockerfileProcessStore
    ports:
     - "12000:12000"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:processstore
  process-engine: 
    container_name: ebusa-process-engine
    hostname: process-engine
    build: 
      context: ./builds/
      dockerfile: DockerfileProcessengine
    ports:
     - "7361:7361"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:processengine
  external-communicator: 
    container_name: external-communicator
    hostname: external-communicator
    build: 
      context: ./builds/
      dockerfile: DockerfileExternalCommunicator
    ports:
     - "7362:7362"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:externalcommunicator
  event-logger: 
    container_name: event-logger
    hostname: event-logger
    build: 
      context: ./builds/
      dockerfile: DockerfileEventLogger
    ports:
     - "7363:7363"
    restart: always
    networks:
      - spring-cloud-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka
    image: freinprecht/easybiz:eventlogger
networks:
    spring-cloud-network:
        driver: bridge

